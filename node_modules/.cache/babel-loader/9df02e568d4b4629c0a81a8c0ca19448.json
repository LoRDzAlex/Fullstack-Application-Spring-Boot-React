{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Downloads\\\\FullStack-Application-m223\\\\src\\\\components\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport FormUpdateDialog from \"./FormUpdateDialog\";\nimport CompanyList from \"./CompanyList\";\nimport styles from \"./table.css\";\nimport JobDelete from \"./JobDelete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JobList = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [lists, setList] = useState([]);\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"http://localhost:8080/job\", {\n      method: 'GET',\n      redirect: 'follow',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setList(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: styles.TableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"collapsible table\",\n        className: styles.Table,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"JobListing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Job Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Zip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Changed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), lists.map(list => /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: list.jobName || \"nicht vorhanden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: list.address || \"nicht vorhanden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: list.zip || \"nicht vorhanden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: list.status || \"nicht vorhanden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: list.changed || \"nicht vorhanden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: list.created || \"nicht vorhanden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(FormUpdateDialog, {\n                id: list.id,\n                jobName: list.jobName,\n                address: list.address,\n                zip: list.zip,\n                status: list.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(JobDelete, {\n                id: list.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, list.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CompanyList, {\n            id: list.company.id,\n            companyName: list.company.companyName,\n            website: list.company.website,\n            canton: list.company.canton,\n            contactId: list.contact.id,\n            contactName: list.contact.contactName,\n            gender: list.contact.gender,\n            email: list.contact.email,\n            tel: list.contact.tel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(JobList, \"DYR4BCqx9dfmSItRDnQW9Uvd/ag=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["useEffect","useState","React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","FormUpdateDialog","CompanyList","styles","JobDelete","JobList","error","setError","isLoaded","setIsLoaded","lists","setList","fetch","method","redirect","headers","then","res","json","result","message","map","list","border","jobName","address","zip","status","changed","created","id","company","companyName","website","canton","contact","contactName","gender","email","tel"],"sources":["C:/Users/micha/Downloads/FullStack-Application-m223/src/components/JobList.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport FormUpdateDialog from \"./FormUpdateDialog\";\r\nimport CompanyList from \"./CompanyList\";\r\nimport styles from \"./table.css\"\r\nimport JobDelete from \"./JobDelete\";\r\n\r\n\r\nexport const JobList = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [lists, setList] = useState([]);\r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/job\", {\r\n            method: 'GET',\r\n            redirect: 'follow',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setList(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n\r\n            <TableContainer component={Paper} className={styles.TableContainer}>\r\n\r\n                <Table aria-label=\"collapsible table\" className={styles.Table}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>JobListing</TableCell>\r\n                            <TableCell align=\"right\">Job Name</TableCell>\r\n                            <TableCell align=\"right\">Address</TableCell>\r\n                            <TableCell align=\"right\">Zip</TableCell>\r\n                            <TableCell align=\"right\">Status</TableCell>\r\n                            <TableCell align=\"right\">Changed</TableCell>\r\n                            <TableCell align=\"right\">Created</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {lists.map((list) => (\r\n                    <TableBody>\r\n\r\n                            <TableRow\r\n                                key={list.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 }  }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\" >\r\n\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{list.jobName || \"nicht vorhanden\"}</TableCell>\r\n                                <TableCell align=\"right\">{list.address || \"nicht vorhanden\"}</TableCell>\r\n                                <TableCell align=\"right\">{list.zip || \"nicht vorhanden\"}</TableCell>\r\n                                <TableCell align=\"right\">{list.status || \"nicht vorhanden\"}</TableCell>\r\n                                <TableCell align=\"right\">{list.changed || \"nicht vorhanden\"}</TableCell>\r\n                                <TableCell align=\"right\">{list.created || \"nicht vorhanden\"}</TableCell>\r\n                                <TableCell>\r\n                                    <FormUpdateDialog id={list.id} jobName={list.jobName} address={list.address} zip={list.zip} status={list.status}/>\r\n                                    <JobDelete id={list.id}/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        <CompanyList id={list.company.id} companyName={list.company.companyName} website={list.company.website} canton={list.company.canton} contactId={list.contact.id} contactName={list.contact.contactName} gender={list.contact.gender} email={list.contact.email} tel={list.contact.tel}/>\r\n                    </TableBody>))}\r\n                    </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n}\r\nexport default JobList"],"mappings":"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"},"metadata":{},"sourceType":"module"}